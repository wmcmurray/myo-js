!function(e){function t(e){this.id=e,this.status="not-paired",this.arm=null,this.direction=null,this.accelerometer={},this.gyroscope={},this.orientation={},this.pose="rest"}var i=t.prototype;i.init=function(){},i.setStatus=function(e){this.status=e},i.setArm=function(e){this.arm=e.arm,this.direction=e.x_direction},i.setOrientation=function(e){this.accelerometer=e.accelerometer,this.gyroscope=e.gyroscope,this.orientation=e.orientation},i.setPose=function(e){this.pose=e.pose},i.sendCommand=function(e,t){MyoJS.sendCommand(e,this.id,t)},i.vibrate=function(e){this.sendCommand("vibrate",{type:e||"short"})},e.Myo=t}(window),function(e){function t(){this.devices=[]}function i(e){console.warn(e)}function s(t){if(t.data){var i=JSON.parse(t.data),s=i[1].myo;switch("undefined"==typeof this.devices[s]&&(this.devices[s]=new e.Myo(s)),i[0]){case"event":switch(i[1].type){case"paired":case"connected":this.devices[s].setStatus(i[1].type);break;case"arm_recognized":this.devices[s].setArm(i[1]);break;case"orientation":this.devices[s].setOrientation(i[1]);break;case"pose":this.devices[s].setPose(i[1]);break;default:console.warn("UNSUPPORTED EVENT:",i[1].type,i[1])}break;default:console.warn("UNSUPPORTED DATA:",i[0],i[1])}}}var n=10138,o="127.0.0.1",c="ws://"+o+":"+n+"/myo/",a=1,r=t.prototype;r.init=function(){"WebSocket"in e?(this.socket=new WebSocket(c+a),this.socket.onmessage=s.bind(this)):i("You need a browser that supports websocket to use your Myo on the web.")},r.getDevices=function(){return this.devices},r.sendCommand=function(e,t,i){var s={command:e,myo:t};if("undefined"!=typeof i)for(var n in i)s[n]=i[n];this.socket.send(JSON.stringify(["command",s]))},e.MyoJS=new t}(window);